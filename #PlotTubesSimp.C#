
#include <iostream>
#include <string>
#include <sstream>
#include <vector>
///////////////////////
#include "TNtuple.h"
#include "TFile.h"
#include "TCanvas.h"
#include "TH2.h"

#define SAVE_PDF_PLOT 1
void PlotTubesSimp( std::string const& Infile = "Tracks_output.root",
	       Double_t const ww      = 800,
	       Double_t const hh      = 800,
	       size_t dim = 3
	       )
{
  //TCanvas *c2 = new TCanvas("TmporaryMC", "blabla",  ww, hh );
   

   /* const Int_t n = 50;
   TRandom *r = new TRandom();
   Double_t x =0, y=0, z=0;
   TPolyLine3D *l = new TPolyLine3D(n);
   for (Int_t i=0;i<n;i++) {
     x +=1/50.;
     y += 1/50.;
     z += 1/50.;
      l->SetPoint(i,x,y,z);
   }
   l->Draw();
 
   c2->Update();
   TAxis3D *axis = TAxis3D::GetPadAxis();
   axis->SetLabelColor(kBlack);
   axis->SetAxisColor(kBlack);
   axis->GetXaxis()->SetTitle("x");
   axis->GetYaxis()->SetTitle("y");

   axis->GetZaxis()->SetTitle("z");
   // gPad->SetLeftMargin(0.50); //15 per cent of pad for left margin, default is 10%
   axis->GetYaxis()->SetTitleOffset(2.2);
      axis->GetXaxis()->SetTitleOffset(2.2);
   axis->GetZaxis()->SetTitleOffset(2.2);
  */

  /* const Double_t sq2 = TMath::Sqrt(2.);
   gSystem->Load("libGeom");
   TGeoManager *mgr =   new TGeoManager("Geom","composite shape example");
   // mgr->Edit();
   TGeoMedium *medium = 0;
   TGeoVolume *top = mgr->MakeBox("TOP",medium,100,250,250);
   mgr->SetTopVolume(top);
   TView *view = TView::CreateView(1);
   view->SetRange(0,0,0,5,5,200);
   view->ShowAxis();
// make shape components
   TGeoTube *stub  = new TGeoTube("T",0,5,150);
   const Int_t n = 50;
   TRandom *r = new TRandom();
   Double_t x =0, y=0, z=0;
   TPolyLine3D *l = new TPolyLine3D(n);
   for (Int_t i=0;i<n;i++) {
     x +=1.;
     y += 1.;
     z += 1.;
     l->SetPoint(i,x,y,z);
   }
   l->Draw();
   TGeoTranslation *t1 = new TGeoTranslation("t1",+20,0,0);
   t1->RegisterYourself();
   TGeoTranslation *t2 = new TGeoTranslation("t2",+40,0,0);
   t2->RegisterYourself();

   TGeoTranslation *t3 = new TGeoTranslation("t3",+10,+20,0);
   t3->RegisterYourself();
   TGeoTranslation *t4 = new TGeoTranslation("t4",+30,+20,0);
   t4->RegisterYourself();
   TGeoRotation *r1 = new TGeoRotation("r1",90,0,0,180,90,90);
 r1->RegisterYourself();
   stub->Draw("same");
   
   TGeoTube *a = new TGeoTube("A",0, 5,150);
   //  a->SetName("A");                 // shapes need names too
 //      TGeoTube *b = new TGeoTube(0, 20,20);
 //      b->SetName("B");
 //      TGeoBBox *c = new TGeoBBox(10,10,50);
 //      c->SetName("C");
 //      TGeoBBox *d = new TGeoBBox(50,10,10);
 //      d->SetName("D");
 //
      TGeoCompositeShape *cs;
      cs = new TGeoCompositeShape("CS", "(A+A:t1)");
      cs->Draw("same");

      TGeoCompositeShape *cs2;

      cs2 = new TGeoCompositeShape("CS2", "(A+A:t2)");
      cs2->Draw("same");
      cs2 = new TGeoCompositeShape("CS2", "(A+A:t3)");
      cs2->Draw("same");
      cs2 = new TGeoCompositeShape("CS2", "(A+A:t4+A:r1)");
      cs2->Draw("same");
// define some rotations
   /*  TGeoRotation *r1 = new TGeoRotation("r1",90,0,0,180,90,90);
   r1->RegisterYourself();
   TGeoRotation *r2 = new TGeoRotation("r2",90,0,45,90,45,270);
   r2->RegisterYourself();*/
   // create a composite
   // TGeoCompositeShape *cs = new TGeoCompositeShape("cs",
   //						   "((T+T:r1)-(P+P:r1))*B:r2");
//TGeoVolume *comp = new TGeoVolume("COMP",cs);
   //  stub->SetLineColor(5);

// put it in the top volume
   //  top->AddNode(stub,1);
   //mgr->CloseGeometry();
   // visualize it with ray tracing
  const Double_t sq2 = TMath::Sqrt(2.);
  gSystem->Load("libGeom");
  TGeoManager *mgr =
    new TGeoManager("Geom","composite shape example");
  TGeoMedium *medium = 0;
  TGeoVolume *top = mgr->MakeBox("TOP",medium,100,250,250);
  mgr->SetTopVolume(top);

  // make shape components
  // TGeoBBox *sbox  = new TGeoBBox("B",100,125*sq2,125*sq2);
  TGeoTube *stub  = new TGeoTube("T",0,100,250);
  // TGeoPgon *spgon = new TGeoPgon("P",0.,360.,6,2);
  //spgon->DefineSection(0,-250,0,80);
  // spgon->DefineSection(1,250,0,80);

  // define some rotations
  TGeoRotation *r1 = new TGeoRotation("r1",90,0,0,180,90,90);
  r1->RegisterYourself();
  TGeoRotation *r2 = new TGeoRotation("r2",90,0,45,90,45,270);
  r2->RegisterYourself();
  // create a composite
  TGeoCompositeShape *cs = new TGeoCompositeShape("cs",
						  "(T+T:r1)");
  TGeoVolume *comp = new TGeoVolume("COMP",cs);
  comp->SetLineColor(5);

  // put it in the top volume
  top->AddNode(comp,1);
  mgr->CloseGeometry();
  // visualize it with ray tracing
  top->Raytrace();

      
}
